<%-include("../../views/partials/user/header")%>

    <title>Frootspeedika - Order History</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link
        href="https://fonts.googleapis.com/css2?family=Bodoni+Moda:opsz@6..96&family=Inter:wght@400;500;600&display=swap"
        rel="stylesheet">
    <style>
        :root {
            --dark-bg: #ffffff;
            /* Matches header & footer */
            --accent-orange: #ff8c42;
            /* Orange accent for fruits */
            --secondary-bg: #0A2E36;
            /* Dark teal, complements header/footer */
            --text-primary: #ffffff;
            /* White text */
            --text-secondary: #cccccc;
            /* Light gray for secondary text */
            --gradient-bg: linear-gradient(135deg, #ff8c42, #ff6f61);
            /* Gradient for cards */
        }

        body {
            background-color: var(--dark-bg);
            color: var(--text-primary);
            font-family: 'Inter', sans-serif;
        }

        .sidebar {
            height: auto;
            background: var(--secondary-bg);
            padding: 2rem 1.5rem;
            border-right: 1px solid rgba(255, 140, 66, 0.1);
            /* Orange border */
        }

        a {
            text-decoration: none;
        }

        .sidebar a {
            color: var(--text-primary);
            text-decoration: none;
            padding: 1rem;
            margin: 0.5rem 0;
            border-radius: 8px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .sidebar a:hover,
        .sidebar .active {
            background: rgba(255, 140, 66, 0.1);
            /* Orange hover effect */
            transform: translateX(5px);
        }

        .sidebar i {
            width: 25px;
            text-align: center;
        }

        .main-content {
            padding: 2rem;
        }

        .address-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .address-card {
            background: var(--gradient-bg);
            border: none;
            padding: 20px;
            border-radius: 12px;
            color: white;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .address-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

        .address-card h3 {
            font-size: 1.5rem;
            margin-bottom: 10px;
            font-weight: 600;
        }

        .address-card p {
            margin: 5px 0;
            font-size: 0.9rem;
        }

        .address-actions {
            margin-top: 15px;
            display: flex;
            gap: 10px;
        }

        .btn {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background-color: rgba(255, 255, 255, 0.9);
            color: #ff8c42;
        }

        .btn-primary:hover {
            background-color: white;
            color: #ff6f61;
        }

        .btn-danger {
            background-color: rgba(255, 255, 255, 0.9);
            color: #ff4444;
        }

        .btn-danger:hover {
            background-color: white;
            color: #ff0000;
        }

        .add-address-btn {
            background: var(--gradient-bg);
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 500;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .add-address-btn:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 15px rgba(255, 140, 66, 0.4);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: white;
            margin: 15% auto;
            padding: 20px;
            width: 50%;
            border-radius: 12px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }

        .address-type {
            display: flex;
            gap: 15px;
        }

        .card-green {
            background-color: #ADD8E6;
        }

        .main {
            padding: 30px 0;
        }

        .dashboard-menu {
            background-color: #cce3e6;
            border-radius: 10px;
            padding: 15px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .dashboard-menu .nav-link {
            font-weight: bold;
            color: #30683c;
            box-shadow: 0 4px 10px rgba(123, 131, 112, 0.3), 0 4px 20px rgba(0, 191, 255, 0.2);
            transition: box-shadow 0.3s ease;
        }

        .dashboard-menu .nav-link:hover {
            color: #00bfff;
            box-shadow: 0 4px 15px rgba(173, 255, 47, 0.5), 0 6px 25px rgba(0, 191, 255, 0.4);
        }

        .card {
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
            margin-bottom: 20px;
        }

        .card-header {
            background-color: #487379;
            color: white;
            border-radius: 10px 10px 0 0;
        }

        .profile-image-container {
            display: flex;
            align-items: center;
        }

        .rounded-circle {
            border-radius: 50%;
            border: 2px solid #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .ml-3 {
            margin-left: 15px;
        }

        @media (max-width: 768px) {
            .dashboard-menu {
                padding: 10px;
            }

            .card {
                margin-bottom: 15px;
            }
        }

        body {
            background-color: #f7f7f7;
            color: #ff8400;
        }

        .main-content {
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .main-content h2 {
            margin-bottom: 20px;
        }

        .form-group label {
            font-weight: bold;
        }

        .form-group span {
            color: red;
        }

        .btn-orange {
            background-color: #ff6600;
            color: white;
        }

        .btn-orange:hover {
            background-color: #e65c00;
        }

        .btn-blue {
            background-color: #0000ff;
            color: white;
        }

        .btn-blue:hover {
            background-color: #0000cc;
        }

        .photo img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .order-header {
            background: var(--secondary-bg);
            padding: 10px;
            color: var(--accent-orange);
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
        }

        .order-body {
            padding: 20px;
        }

        .order-footer {
            padding: 10px;
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
        }

        .order-card {
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .order-status {
            color: red;
        }

        .order-ship-to {
            color: green;
        }

        .order-link {
            color: blue;
            text-decoration: none;
        }

        .order-link:hover {
            text-decoration: underline;
        }

        .btn-orange {
            background-color: orange;
            color: white;
        }
    </style>
    </style>
    </head>

    <body>
        <!-- Breadcrumb Section -->
        <div class="breadcrumb-section breadcrumb-bg">
            <div class="container">
                <div class="row">
                    <div class="col-lg-8 offset-lg-2 text-center">
                        <div class="breadcrumb-text">
                            <p>Fresh and Organic</p>
                            <h1>Order History</h1>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Breadcrumb Section -->

        <div class="container-fluid">
            <div class="row">
                <!-- Sidebar -->
                <nav class="col-md-3 col-lg-2 d-md-block sidebar">
                    <h3 class="mb-4">Frootspeedika</h3>
                    <a href="/userProfile"><i class="fas fa-user"></i> Dashboard</a>
                    <a href="/orders" class="active"><i class="fas fa-history"></i> Order History</a>
                    <a href="/address"><i class="fas fa-map-marker-alt"></i> Address Book</a>
                    <a href="/editProfile"><i class="fas fa-cog"></i> Account Settings</a>
                    <a href="/wallet"><i class="fa-solid fa-wallet"></i> Wallet</a>
                    <a href="/coupons"><i class="fa-duotone fa-solid fa-ticket"></i> Coupons</a>
                    <a href="#" onclick="confirmAdminLogout(event)"><i class="fas fa-sign-out-alt"></i> Logout</a>
                </nav>

                <!-- Main Content -->
                <main class="col-md-9 p-4">
                    <h2 class="mb-4">Your Orders</h2>

                    <% if (orders && orders.length> 0) { %>
                        <% orders.forEach(order=> { %>
                            <div class="order-card">
                                <div class="order-header">
                                    <div class="row align-items-center">
                                        <div class="col-md-3">
                                            <small>ORDER PLACED</small><br>
                                            <%= new Date(order.createdOn).toLocaleDateString() %>
                                        </div>
                                        <div class="col-md-3">
                                            <small>TOTAL</small><br>
                                            ₹<%= order.finalAmount %>
                                        </div>
                                        <div class="col-md-3">
                                            <small>ORDER ID</small><br>
                                            #<%= order.orderId %>
                                        </div>
                                        <div class="col-md-3">
                                            <span class="status-badge 
                                                <%= order.status === 'delivered' ? 'bg-success' :
                                                    order.status === 'cancelled' ? 'bg-danger' :
                                                    order.status === 'returned' ? 'bg-danger' :
                                                    order.status === 'shipped' ? 'bg-info' :
                                                    'bg-warning' %> text-white">
                                                <%= order.status.toUpperCase() %>
                                            </span>
                                        </div>
                                    </div>
                                </div>

                                <div class="order-body p-3">
                                    <div class="row align-items-center">
                                        <div class="col-md-2 mb-3">
                                            <img src="<%= order.product.productImages[0] %>"
                                                alt="<%= order.product.productName %>" class="product-image">
                                        </div>
                                        <div class="col-md-4">
                                            <h5>
                                                <%= order.product.productName %>
                                            </h5>
                                            <p>Quantity: <%= order.quantity %>
                                            </p>
                                            <p>Price: ₹<%= order.price %>
                                            </p>
                                        </div>

                                        <div class="col-md-6 text-end">
                                            <a href="/order-details?orderId=<%= order.orderId %>"
                                                class="btn btn-outline-primary btn-sm">
                                                View Details
                                            </a>
                                            <% if (order.status !=='cancelled' && order.status !=='delivered' &&
                                                order.status !=='returned' ) { %>
                                                <button onclick="cancelOrder('<%= order._id %>')"
                                                    class="btn btn-outline-danger btn-sm mt-2">
                                                    Cancel Order
                                                </button>
                                                <% } else if (order.status==='delivered' ) { %>
                                                    <button onclick="returnOrder('<%= order._id %>')"
                                                        class="btn btn-outline-primary btn-sm mt-2">
                                                        Return Order
                                                    </button>
                                                    <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <% }); %>
                                <% } else { %>
                                    <div class="text-center py-5">
                                        <div class="mb-4">
                                            <i class="fas fa-shopping-bag fa-3x text-muted"></i>
                                        </div>
                                        <h3>No orders yet</h3>
                                        <p class="text-muted">When you place an order, it will appear here.</p>
                                        <a href="/shop" class="btn btn-primary mt-3">Start Shopping</a>
                                    </div>
                                    <% } %>

                                        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
                                        <script>
                                            // Cancel Order Function
                                            async function cancelOrder(orderId) {
                                                const { value: reason } = await Swal.fire({
                                                    title: 'Cancel Order',
                                                    input: 'select',
                                                    inputLabel: 'Reason for cancellation',
                                                    inputPlaceholder: 'Select a reason...',
                                                    showCancelButton: true,
                                                    inputOptions: {
                                                        'changed': 'Changed My Mind',
                                                        'price': 'Found Better Price Elsewhere',
                                                        'delay': 'Shipping Takes Too Long',
                                                        'mistake': 'Ordered by Mistake',
                                                        'duplicate': 'Duplicate Order',
                                                        'other': 'Other (Please specify)'
                                                    },
                                                    inputValidator: (value) => !value && 'Please select a reason!'
                                                });

                                                if (reason) {
                                                    let finalReason = reason;

                                                    // If "other" is selected, show textarea for additional details
                                                    if (reason === 'other') {
                                                        const { value: otherReason } = await Swal.fire({
                                                            title: 'Please Specify Reason',
                                                            input: 'textarea',
                                                            inputLabel: 'Describe your reason for cancellation',
                                                            inputPlaceholder: 'Type your reason here...',
                                                            showCancelButton: true,
                                                            inputValidator: (value) => !value && 'Please provide a description!'
                                                        });

                                                        if (!otherReason) {
                                                            return; // Exit if user cancels the textarea input
                                                        }

                                                        finalReason = `Other: ${otherReason}`;
                                                    }

                                                    try {
                                                        const response = await fetch('/orders/cancel', {
                                                            method: 'patch',
                                                            headers: { 'Content-Type': 'application/json' },
                                                            body: JSON.stringify({ reason: finalReason, orderId })
                                                        });

                                                        const data = await response.json();

                                                        if (data.success) {
                                                            await Swal.fire('Success!', 'Order cancelled successfully', 'success');
                                                            location.reload();
                                                        } else {
                                                            throw new Error(data.message);
                                                        }
                                                    } catch (error) {
                                                        Swal.fire('Error!', error.message, 'error');
                                                    }
                                                }
                                            }

                                            async function returnOrder(orderId) {
                                                const { value: reason } = await Swal.fire({
                                                    title: 'Return Order',
                                                    input: 'select',
                                                    inputLabel: 'Reason for returning',
                                                    inputPlaceholder: 'Select a reason...',
                                                    showCancelButton: true,
                                                    inputOptions: {
                                                        'defective': 'Defective Product',
                                                        'wrong': 'Wrong Item Received',
                                                        'damaged': 'Damaged During Shipping',
                                                        'quality': 'Not Satisfied with Quality',
                                                        'changed': 'Changed My Mind',
                                                        'other': 'Other (Please specify)'
                                                    },
                                                    inputValidator: (value) => !value && 'Please select a reason!'
                                                });

                                                if (reason) {
                                                    let finalReason = reason;

                                                    // If "other" is selected, show textarea for additional details
                                                    if (reason === 'other') {
                                                        const { value: otherReason } = await Swal.fire({
                                                            title: 'Please Specify Reason',
                                                            input: 'textarea',
                                                            inputLabel: 'Describe your reason for return',
                                                            inputPlaceholder: 'Type your reason here...',
                                                            showCancelButton: true,
                                                            inputValidator: (value) => !value && 'Please provide a description!'
                                                        });

                                                        if (!otherReason) {
                                                            return; // Exit if user cancels the textarea input
                                                        }

                                                        finalReason = `Other: ${otherReason}`;
                                                    }

                                                    try {
                                                        const response = await fetch('/orders/return', {  // Fixed the URL syntax
                                                            method: 'patch',
                                                            headers: { 'Content-Type': 'application/json' },
                                                            body: JSON.stringify({ reason: finalReason, orderId })
                                                        });

                                                        const data = await response.json();

                                                        if (data.success) {
                                                            await Swal.fire('Success!', 'Order return successfully initiated', 'success');
                                                            location.reload();
                                                        } else {
                                                            throw new Error(data.message);
                                                        }
                                                    } catch (error) {
                                                        Swal.fire('Error!', error.message, 'error');
                                                    }
                                                }
                                            }
                                            // Logout Confirmation
                                            function confirmLogout(event) {
                                                event.preventDefault();
                                                Swal.fire({
                                                    title: 'Logout?',
                                                    text: "You'll need to login again later!",
                                                    icon: 'warning',
                                                    showCancelButton: true,
                                                    confirmButtonColor: '#3085d6',
                                                    cancelButtonColor: '#d33',
                                                    confirmButtonText: 'Yes, Logout'
                                                }).then((result) => result.isConfirmed && window.location.assign('/logout'));
                                            }
                                        </script>
                                        <script>
                                            function confirmAdminLogout(event) {
                                            event.preventDefault();
                                            Swal.fire({
                                            title: "Are you sure?",
                                            text: "You will be logged out!",
                                            icon: "warning",
                                            showCancelButton: true,
                                            confirmButtonColor: "#3085d6",
                                            cancelButtonColor: "#d33",
                                            confirmButtonText: "Yes, Logout"
                                        }).then((result) => {
                                            if (result.isConfirmed) {
                                                window.location.href = "/logout"; // Redirect only if confirmed
                                            }
                                        });
                                            
                                        }
                                        </script>

                                        <!-- jquery -->
                                        <script src="assets/js/jquery-1.11.3.min.js"></script>
                                        <!-- bootstrap -->
                                        <script src="assets/bootstrap/js/bootstrap.min.js"></script>
                                        <!-- count down -->
                                        <script src="assets/js/jquery.countdown.js"></script>
                                        <!-- isotope -->
                                        <script src="assets/js/jquery.isotope-3.0.6.min.js"></script>
                                        <!-- waypoints -->
                                        <script src="assets/js/waypoints.js"></script>
                                        <!-- owl carousel -->
                                        <script src="assets/js/owl.carousel.min.js"></script>
                                        <!-- magnific popup -->
                                        <script src="assets/js/jquery.magnific-popup.min.js"></script>
                                        <!-- mean menu -->
                                        <script src="assets/js/jquery.meanmenu.min.js"></script>
                                        <!-- sticker js -->
                                        <script src="assets/js/sticker.js"></script>
                                        <!-- main js -->
                                        <script src="assets/js/main.js"></script>