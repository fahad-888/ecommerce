<%- include("../../views/partials/admin/header") %>

<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --success-color: #2ecc71;
            --danger-color: #e74c3c;
            --info-color: #3498db;
            --light-gray: #ecf0f1;
        }

        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .thumbnail {
            position: relative;
            width: 150px;
        }

        .thumbnail img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }

        .delete-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 12px;
            cursor: pointer;
        }

        .cropper-container {
            width: 100%;
            max-width: 500px;
            margin: 20px auto;
        }
        /* Add this to your existing CSS */
.cropper-container {
    width: 100%;
    max-width: 500px;
    margin: 20px auto;
}

#preview0, #preview1, #preview2, #preview3 {
    max-width: 100%;
    height: auto;
    margin-top: 10px;
}
    </style>
</head>
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
    </div>
    <div class="card mb-4">
        <div class="card-body">
            <form id="editProductForm" method="POST" action="/admin/editProduct/<%= product._id %>"
                enctype="multipart/form-data">
                <body onload="setDefaultendDate()"></body>

                <!-- Product Name -->
                <div class="mb-4">
                    <label for="productName" class="form-label">Product Name</label>
                    <input type="text" name="productName" value="<%= product.productName %>" class="form-control"
                        id="productName" required>
                    <div id="productName-error" class="text-danger" style="display: none;"></div>
                </div>

                <!-- Short Description -->
                <div class="mb-4">
                    <label for="shortDescription" class="form-label">Description</label>
                    <textarea name="shortDescription" class="form-control" id="shortDescription" rows="6"
                        required><%= product.shortDescription %></textarea>
                    <div id="description-error" class="text-danger" style="display: none;"></div>
                </div>

                <!-- Nutritional Information -->
                <div class="mb-4">
                    <label for="nutritionalInfo" class="form-label">Nutritional Information</label>
                    <textarea name="nutritionalInfo" class="form-control" id="nutritionalInfo" rows="4"
                        required><%= product.nutritionalInfo %></textarea>
                    <div id="nutritionalInfo-error" class="text-danger" style="display: none;"></div>
                </div>

                <!-- Price, Stock, and Weight/Size -->
                <div class="row">
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label for="regularPrice" class="form-label">Regular Price</label>
                            <input name="regularPrice" type="number" value="<%= product.regularPrice %>"
                                class="form-control" id="regularPrice" required>
                            <div id="regularPrice-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label for="salePrice" class="form-label">Sale Price</label>
                            <input name="salePrice" type="number" value="<%= product.salePrice %>"
                                class="form-control" id="salePrice" required>
                            <div id="salePrice-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label for="stock" class="form-label">Stock</label>
                            <input name="stock" type="number" value="<%= product.stock %>" class="form-control"
                                id="stock" required>
                            <div id="stock-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label for="weightSize" class="form-label">Weight/Size</label>
                            <input name="weightSize" type="text" value="<%= product.weightSize %>"
                                class="form-control" id="weightSize" required>
                            <div id="weightSize-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                </div>

                <!-- Organic, Imported/Local, Fresh/Frozen -->
                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label for="organic" class="form-label">Organic</label>
                            <select name="organic" class="form-control" id="organic" required>
                                <option value="yes" <%=product.organic==='yes' ? 'selected' : '' %>>Yes</option>
                                <option value="no" <%=product.organic==='no' ? 'selected' : '' %>>No</option>
                                <option value="na" <%=product.organic==='na' ? 'selected' : '' %>>N/A</option>
                            </select>
                            <div id="organic-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label for="importedLocal" class="form-label">Product Origin</label>
                            <select name="importedLocal" class="form-control" id="importedLocal" required>
                                <option value="imported" <%=product.importedLocal==='imported' ? 'selected' : '' %>
                                    >Imported</option>
                                <option value="local" <%=product.importedLocal==='local' ? 'selected' : '' %>>Local
                                </option>
                                <option value="na" <%=product.importedLocal==='na' ? 'selected' : '' %>>N/A</option>
                            </select>
                            <div id="importedLocal-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label for="freshFrozen" class="form-label">Fresh / Frozen</label>
                            <select name="freshFrozen" class="form-control" id="freshFrozen" required>
                                <option value="fresh" <%=product.freshFrozen==='fresh' ? 'selected' : '' %>>Fresh
                                </option>
                                <option value="frozen" <%=product.freshFrozen==='frozen' ? 'selected' : '' %>>Frozen
                                </option>
                                <option value="na" <%=product.freshFrozen==='na' ? 'selected' : '' %>>N/A</option>
                            </select>
                            <div id="freshFrozen-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                </div>

                <!-- Expiration Date and Status -->
                <div class="row">
                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label for="expirationDate" class="form-label">Expiration Date</label>
                            <input name="expirationDate" type="date" 
                                class="form-control" id="expirationDate" required>
                            <div id="expirationDate-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="mb-4">
                            <label for="status" class="form-label">Status</label>
                            <select name="status" class="form-control" id="status" required>
                                <option value="Available" <%=product.status==='Available' ? 'selected' : '' %>
                                    >Available</option>
                                <option value="out of stock" <%=product.status==='out of stock' ? 'selected' : '' %>
                                    >Out of Stock</option>
                                <option value="Discontinued" <%=product.status==='Discontinued' ? 'selected' : '' %>
                                    >Discontinued</option>
                            </select>
                            <div id="status-error" class="text-danger" style="display: none;"></div>
                        </div>
                    </div>
                </div>

                <!-- Category -->
                <div class="mb-4">
                    <label for="category" class="form-label">Category</label>
                    <select class="form-select" name="category" id="category" required>
                        <% for(let i=0; i < cat.length; i++) { %>
                            <option value="<%= cat[i]._id %>" <%=product.category===cat[i]._id ? 'selected' : '' %>>
                                <%= cat[i].name %>
                            </option>
                            <% } %>
                    </select>
                    <div id="category-error" class="text-danger" style="display: none;"></div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Product Images</label>
                    <div class="row">
                        <% for(let i = 0; i < 4; i++) { %>
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <% if(product.productImages[i]) { %>
                                        <img src="/<%= product.productImages[i] %>" class="card-img-top" alt="Product Image">
                                        <div class="card-body">
                                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteSingleImage('<%= product.productImages[i] %>', '<%= product._id %>', <%= i %>)">Delete</button>
                                        </div>
                                    <% } else { %>
                                        <div class="card-body">
                                            <div class="image-upload-container">
                                                <input type="file" name="image<%= i+1 %>" accept="image/*" class="form-control image-input" data-index="<%= i %>" onchange="previewImage(event, <%= i %>)">
                                                <div class="preview-container" style="margin-top: 10px; display: none;">
                                                    <img id="preview<%= i %>" src="#" alt="Image preview" style="max-width: 100%; height: auto;">
                                                </div>
                                                <input type="hidden" name="croppedImage<%= i+1 %>" id="croppedImage<%= i+1 %>" value="">
                                            </div>
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>

                <div id="cropperContainer" class="cropper-container" style="display: none;">
                    <img id="cropperImage" src="/placeholder.svg" alt="Image to crop">
                </div>

                <div class="mb-4">
                    <button class="btn btn-primary" type="submit">Update Product</button>
                </div>
            </form>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

<script>
function validateFields() {
    const fields = [
        { id: 'productName', errorId: 'productName-error', validation: (value) => !value.trim() ? 'Product Name is required.' : '' },
        { id: 'shortDescription', errorId: 'description-error', validation: (value) => !value.trim() ? 'Short Description is required.' : '' },
        { id: 'nutritionalInfo', errorId: 'nutritionalInfo-error', validation: (value) => !value.trim() ? 'Nutritional Information is required.' : '' },
        { id: 'weightSize', errorId: 'weightSize-error', validation: (value) => !value.trim() ? 'Weight/Size is required.' : '' },
        { id: 'regularPrice', errorId: 'regularPrice-error', validation: (value) => isNaN(value) || value < 0 ? 'Regular Price must be a positive number.' : '' },
        { id: 'salePrice', errorId: 'salePrice-error', validation: (value) => value !== "" && (isNaN(value) || value < 0 || value >= parseFloat(document.getElementById('regularPrice').value)) ? 'Sale Price must be a positive number and less than Regular Price.' : '' },
        { id: 'stock', errorId: 'stock-error', validation: (value) => isNaN(value) || value < 0 ? 'Stock must be a positive number.' : '' },
        { id: 'organic', errorId: 'organic-error', validation: (value) => !value ? 'Organic field is required.' : '' },
        { id: 'expirationDate', errorId: 'expirationDate-error', validation: (value) => value && new Date(value) < new Date() ? 'Expiration Date must be in the future.' : '' },
        { id: 'importedLocal', errorId: 'importedLocal-error', validation: (value) => !value ? 'Product Origin is required.' : '' },
        { id: 'freshFrozen', errorId: 'freshFrozen-error', validation: (value) => !value ? 'Product Condition is required.' : '' },
        { id: 'category', errorId: 'category-error', validation: (value) => !value ? 'Category is required.' : '' },
    ];

    let isValid = true;
    fields.forEach(field => {
        const input = document.getElementById(field.id);
        const errorElement = document.getElementById(field.errorId);
        const errorMessage = field.validation(input.value);
        errorElement.textContent = errorMessage;
        errorElement.style.display = errorMessage ? 'block' : 'none';
        if (errorMessage) isValid = false;
    });

    return isValid;
}

function setDefaultendDate() {
   const today = new Date();
   const tomorrow = new Date(today);
   tomorrow.setDate(today.getDate() + 3);

   const year = tomorrow.getFullYear();
   let month = (tomorrow.getMonth() + 1).toString().padStart(2, "0");
   let day = tomorrow.getDate().toString().padStart(2, "0");
   document.getElementById("expirationDate").value = `${year}-${month}-${day}`;
}


// Attach live validation
document.querySelectorAll('input, select, textarea').forEach(field => {
    field.addEventListener('input', validateFields);
});

// Cropper handling for single and multiple images


let croppers = {};

function previewImage(event, index) {
    const input = event.target;
    if (input.files && input.files[0]) {
        const reader = new FileReader();
        reader.onload = function(e) {
            const previewContainer = input.parentElement.querySelector('.preview-container');
            previewContainer.style.display = 'block';
            
            const preview = document.getElementById(`preview${index}`);
            preview.src = e.target.result;
            preview.style.display = 'block';

            if (croppers[index]) {
                croppers[index].destroy();
            }

            croppers[index] = new Cropper(preview, {
                aspectRatio: 1,
                viewMode: 1,
                ready: function() {
                    this.cropper.crop();
                }
            });
        };
        reader.readAsDataURL(input.files[0]);
    }
}




function deleteSingleImage(imageName, productId, index) {
        Swal.fire({
            title: "delete image",
            text: "Are you sure you want to delete this image?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/admin/deleteImage",
                    method: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({
                        imageNameToServer: imageName,
                        productIdToServer: productId,
                        imageIndex: index
                    }),
                    success: (response) => {
                        console.log("Server Response:", response);
                        if (response.status) {
                            Swal.fire("Deleted!", "The photo has been removed", "success").then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire("Error", response.message || "Failed to delete photo", "error");
                        }
                    },
                    error: (error) => {
                        console.error("AJAX Error:", error);
                        Swal.fire("Error", "An unexpected error occurred", "error");
                    }
                });
            }
        });
    }



// Form submission handling
document.getElementById('editProductForm').addEventListener('submit', async function (e) {
    e.preventDefault();

    if (!validateFields()) return;
    for (let i = 0; i < 4; i++) {
            if (croppers[i]) {
                // Get the cropped canvas as a data URL
                const croppedDataUrl = croppers[i].getCroppedCanvas().toDataURL('image/jpeg');
                // Store the cropped image data in the hidden input
                document.getElementById(`croppedImage${i+1}`).value = croppedDataUrl;
            }
        }

    const formData = new FormData(this);


    
    // Submit form data
    const response = await fetch(this.action, { method: 'POST', body: formData });
    const data = await response.json();

    Swal.fire({
        icon: data.success ? 'success' : 'error',
        title: data.success ? 'Success' : 'Error',
        text: data.message
    }).then(() => {
        if (data.success) window.location.href = '/admin/products';
    });
});
</script>